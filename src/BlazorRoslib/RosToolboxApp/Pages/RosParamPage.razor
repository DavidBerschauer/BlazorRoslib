@page "/rosparam"
@using BlazorRoslib.Core.ROS;
@using BlazorRoslib.Core.ROS.Services;
@using BlazorRoslib.Core.ROS.Rosapi;
@using System.Text.Json;
@using System.Text;

@inject RoslibInterop RosInterop
@inject NavigationManager NavManager

<PageTitle>@ParamName</PageTitle>

<MudContainer Style="height:100%" MaxWidth="MaxWidth.Large" Class="my-3 p-3">
    <MudText Typo="Typo.h4" Color="Color.Secondary" Class="mb-3">@ParamName</MudText>
    <MudText Class="mb-3">@value</MudText>
    <MudTextField @bind-Value="TargetValue" Label="Target Value" Variant="Variant.Outlined" Class="mud-width-full"></MudTextField>
    <div style="white-space: pre-wrap">
        @responseMsg
    </div>
</MudContainer>

@code{
    [Parameter]
    [SupplyParameterFromQuery(Name = "ParamName")]
    public string ParamName { get; set; }
    private string value = "waiting...";
    private string _targetValue = "";
    private string responseMsg = "";

    private string TargetValue
    {
        get => _targetValue;
        set
        {
            if (_targetValue.Equals(value)) return;
            _targetValue = value;
            SetNewValue();
        }
    }

    protected override void OnInitialized()
    {
        Task.Run(async () =>
        {
            await LoadParam();
        });
    }

    private Task LoadParam()
    {
        return RosInterop.CallService<GetParamResponse>(new GetParamService(),
                new GetParamRequest() { Name = ParamName }, (result) =>
                {
                    value = "Value: " + result.value;
                    _targetValue = result.value;
                    InvokeAsync(StateHasChanged);
                });
    }


    //TODO Add /gazebo/set_parameters Type: dynamic_reconfigure/Reconfigure
    private void SetNewValue()
    {
        Task.Run(async () =>
        {
            await RosInterop.CallService(new SetParamService(),
                new SetParamRequest() { Name = ParamName, Value = TargetValue }, (result) =>
                {
                    Task.Run(async () => await LoadParam());
                });
        });
    }
}