@page "/rossettings"
@using BlazorRoslib.Core.ROS;
@inject RoslibInterop RosInterop

<PageTitle>ROS-Einstellungen</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="my-3 p-3">
    <MudPaper Class="p-3">
        <MudTextField @bind-Value="RosInterop.RosHost" Label="Host" Variant="Variant.Outlined" Class="mb-3" />
        <MudNumericField @bind-Value="RosInterop.RosPort" Label="Port" Min="0" Max="65535" Variant="Variant.Outlined" Class="mb-3" />
        <MudSelect @bind-Value="RosInterop.RosProtocol" Label="Protocol" Variant="Variant.Outlined" Class="mb-3">
            <MudSelectItem Value="@RosInteropProtocol.WS">WS</MudSelectItem>
            <MudSelectItem Value="@RosInteropProtocol.WSS">WSS</MudSelectItem>
        </MudSelect>
        @if (RosInterop.RosProtocol == RosInteropProtocol.WSS)
        {
            <MudText>If a wss connection can not be established, connect to the ROS master directly and accept its certificate:</MudText>
            <MudLink Href="@RosInterop.RosUrl" Target="new">@RosInterop.RosUrl</MudLink>
        }
        @if (RosInterop.RosProtocol == RosInteropProtocol.WS)
        {
            <MudText>If this page is accessed via https WSS is required!</MudText>
        }
        <h5>@RosInterop.ErrorMsg</h5>
        <h5>@navSatMsg</h5>
        <h5>@msg</h5>
        <h5>@otherMsg</h5>
    </MudPaper>
</MudContainer>

@code{
    private string? navSatMsg;
    private string? msg;
    private string? otherMsg;


    //TODO Add Protocol select when moved to library
    protected override void OnInitialized()
    {
        base.OnInitialized();
        RosInterop.OnStateHasChanged += (_) => InvokeAsync(StateHasChanged);
    }
}