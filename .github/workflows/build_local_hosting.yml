# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build RosToolbox for local hosting

on:
  push:
    branches: [ "main" ]
  
jobs:
  build:
    
    runs-on: ubuntu-latest
    env: 
      CI_COMMIT_MESSAGE: CI update for local hosting
      CI_COMMIT_AUTHOR: Continuous Integration
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore Workloads
      working-directory: ./src/BlazorRoslib/RosToolbox
      run: |
        dotnet workload restore
        dotnet workload install wasm-tools-net6
    - name: Clean localHosting
      run: rm -r localHosting
    # publishes Blazor project to the release-folder
    - name: Publish .NET Core Project
      working-directory: ./src/BlazorRoslib/RosToolbox
      run: dotnet publish RosToolbox.csproj -c Release -o ../../../localHosting --nologo
    
    # Commit and push all changed files.
    - name: GIT Commit Build Artifacts (coverage, dist, devdist, docs)
      # Only run on main branch push (e.g. after pull request merge).
      if: github.event_name == 'push'
      run: |
        git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
        git config --global user.email "username@users.noreply.github.com"
        git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}"
        git push
